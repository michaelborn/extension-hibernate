<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>org.lucee</groupId>
   <artifactId>hibernate.extension</artifactId>
   <!-- look into the maven release plugin to automate bumping the version.-->
   <version>5.4.29.20-BETA</version>
   <packaging>bundle</packaging>

   <name>Ortus Hibernate Extension</name>
   <description>Lucee Extension for Hibernate ORM Engine.</description>
   <url>http://maven.lucee.org/extension/hibernate</url>

   <properties>
      <name>Hibernate ORM Engine</name>
      <bundlename>hibernate-extension</bundlename>
      <id>FAD1E8CB-4F45-4184-86359145767C29DE</id>
      <description>Hibernate ORM (Hibernate in short) is an object-relational mapping library for the Java language, providing a framework for mapping an object-oriented domain model to a traditional relational database. Hibernate solves object-relational impedance mismatch problems by replacing direct persistence-related database accesses with high-level object handling functions.</description>
      <class>org.lucee.extension.orm.hibernate.HibernateORMEngine</class>

      <!-- Dependency versions -->
      <lucee.version>5.3.9.133</lucee.version>
      <hibernate.version>5.4.29.Final</hibernate.version>

      <!-- What version of the JDK should we compile against? -->
      <jdk.version>1.8</jdk.version>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
   </properties>

   <licenses>
      <license>
         <name>The GNU Lesser General Public License, Version 2.1</name>
         <url>http://www.gnu.org/licenses/lgpl-2.1.txt</url>
         <distribution>repo</distribution>
      </license>
   </licenses>

   <developers>
      <developer>
         <id>micstriit</id>
         <name>Michael Offner</name>
         <email>michael@lucee.org</email>
         <organization>Lucee Association Switzerland</organization>
         <organizationUrl>http://lucee.org</organizationUrl>
         <roles>
            <role>Project-Administrator</role>
            <role>Developer</role>
         </roles>
         <timezone>+1</timezone>
      </developer>
   </developers>

   <build>
      <plugins>
         <!-- publish to central maven
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>1.6.3</version>
          <extensions>true</extensions>
          <configuration>
            <serverId>ossrh</serverId>
            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
            <autoReleaseAfterClose>true</autoReleaseAfterClose>
          </configuration>
        </plugin> -->

         <!-- 
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5</version>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <useReleaseProfile>false</useReleaseProfile>
            <releaseProfiles>release</releaseProfiles>
            <goals>deploy</goals>
          </configuration>
        </plugin> -->

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.4.1</version>
            <executions>
               <execution>
                  <id>attach-javadocs</id>
                  <goals>
                     <goal>jar</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.3</version>
            <configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
            </configuration>

         </plugin>

         <plugin>
               <groupId>org.apache.felix</groupId>
               <artifactId>maven-bundle-plugin</artifactId>
               <version>5.1.8</version>
               <extensions>true</extensions>
               <configuration>
                  <instructions>
                     <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                     <Bundle-Name>${project.artifactId}</Bundle-Name>
                     <Private-Package>org.lucee.extension.orm.hibernate</Private-Package>
                     <Export-Package>
                        org.lucee.extension.orm.hibernate,org.lucee.extension.orm.hibernate.jdbc
                     </Export-Package>
                     <Import-Package>
                        !lucee.*;,
                        *
                     </Import-Package>
                     
                     <!-- 
                        See:
                        https://liferay.dev/blogs/-/blogs/osgi-and-java-package-imports
                        https://bnd.bndtools.org/instructions/noimportjava.html
                     -->
                     <_noimportjava>true</_noimportjava>
                  </instructions>
               </configuration>
         </plugin>

         <!--
            Turns out using the NAME attribute for the lucee extension name breaks the jar manifest spec. 🤦‍♂️
            See https://github.com/codehaus-plexus/plexus-archiver/blob/7eb5a660a9ccb2968ce4f172baaa949c72e87f87/src/main/java/org/codehaus/plexus/archiver/jar/Manifest.java#L556

            Thus, we have to manually echo this stuff to a custom extension manifest file,
            then use the maven assembly plugin to copy that file into the resulting .lex extension.
         -->
         <plugin>
            <groupId>com.github.ekryd.echo-maven-plugin</groupId>
            <artifactId>echo-maven-plugin</artifactId>
            <version>1.3.2</version>
            <inherited>false</inherited>
            <executions>
               <execution>
                  <id>copy-starter-manifest</id>
                  <phase>package</phase>
                  <goals>
                     <goal>echo</goal>
                  </goals>
                  <configuration>
                     <fromFile>/${project.basedir}/src/main/extension/META-INF/MANIFEST.MF</fromFile>
                     <!-- warning: this plugin appears to wrongly interpolate properties,
                     so ${project.build.directory} ends up creating the full /home/user/path INSIDE this current directory.
                     The best workaround appears to be not using those properties, and hardcoding a RELATIVE path instead.-->
                     <toFile>target/META-INF/MANIFEST.MF</toFile>
                  </configuration>
               </execution>
               <execution>
                  <id>append-manifest-entries</id>
                  <phase>package</phase>
                  <goals>
                     <goal>echo</goal>
                  </goals>
                  <configuration>
                     <message>name: ${name}
id: ${id}
description: ${description}
version: ${project.version}
orm: [{'class':'${class}','name':'${project.artifactId}','version':'${project.version}'}]
lucee-core-version: ${lucee.version}
                     </message>
                     <!-- warning: this plugin appears to wrongly interpolate properties,
                     so ${project.build.directory} ends up creating the full /home/user/path INSIDE this current directory.
                     The best workaround appears to be not using those properties, and hardcoding a RELATIVE path instead.-->
                     <toFile>target/META-INF/MANIFEST.MF</toFile>
                     <!-- <toFile>test.txt</toFile> -->
                     <append>true</append>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
               <execution>
                  <phase>package</phase>
                  <goals>
                     <goal>single</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <!--
                  Since Lucee's MANIFEST.MF is incompat with Java's manifest spec,
                  the Maven Archiver will strip a bunch of entries. Hence, we can't use this option.
               <archive>
                  <manifestFile>${project.basedir}/src/main/extension/META-INF/MANIFEST.MF</manifestFile>
               </archive> -->
               <descriptors>
                  <descriptor>src/main/extension/lex.xml</descriptor>
               </descriptors>
            </configuration>
         </plugin>

         <!-- https://stackoverflow.com/a/26638952 -->
         <plugin>
            <groupId>com.coderplus.maven.plugins</groupId>
            <artifactId>copy-rename-maven-plugin</artifactId>
            <version>1.0.1</version>
            <executions>
               <execution>
               <id>copy-file</id>
               <phase>package</phase>
               <goals>
                  <goal>rename</goal>
               </goals>
               <configuration>
                  <sourceFile>${project.build.directory}/${project.build.finalName}-lex.zip</sourceFile>
                  <destinationFile>${project.build.directory}/${project.build.finalName}.lex</destinationFile>
               </configuration>
               </execution>
            </executions>
         </plugin>

         <!-- https://jeremylong.github.io/DependencyCheck/index.html -->
         <!-- run 'mvn verify' to check dependencies for known CVEs.-->
         <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>7.3.2</version>
            <executions>
               <execution>
                     <goals>
                        <goal>check</goal>
                     </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>

   </build>




   <dependencies>
<!-- 
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.12</version>
      </dependency> -->

      <!-- https://mvnrepository.com/artifact/org.lucee/lucee -->
      <dependency>
         <groupId>org.lucee</groupId>
         <artifactId>lucee</artifactId>
         <version>${lucee.version}</version>
         <!-- https://www.baeldung.com/maven-dependency-scopes#2-provided -->
         <scope>provided</scope>
      </dependency>

      <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-core</artifactId>
         <version>${hibernate.version}</version>
      </dependency>

      <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-ehcache -->
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-ehcache</artifactId>
         <version>${hibernate.version}</version>
      </dependency>
      <!-- w3c.dom - 1.1.0 -->
      <dependency>
         <groupId>w3c</groupId>
         <artifactId>dom</artifactId>
         <type>jar</type>
         <version>1.1.0</version>
      </dependency>

   </dependencies>



   <repositories>
      <!-- Needed for the w3c dom dependency.-->
      <repository>
         <id>repo</id>
         <url>https://raw.githubusercontent.com/lucee/mvn/master/releases</url>
      </repository>
      <!-- <repository>
         <id>maven</id>
         <url>https://repo1.maven.org/maven2/</url>
      </repository> -->
   </repositories>

   <scm>
      <url>https://github.com/michaelborn/extension-hibernate</url>
      <connection>scm:git:git://github.com/michaelborn/extension-hibernate.git</connection>
      <developerConnection>scm:git:git@github.com:michaelborn/extension-hibernate.git</developerConnection>
      <tag>${project.version}</tag>
   </scm>

   <distributionManagement>
      <repository>
         <id>ossrh</id>
         <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
      </repository>
      <snapshotRepository>
         <id>ossrh</id>
         <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      </snapshotRepository>
   </distributionManagement>

</project>